{"total":28,"pageSize":12,"pageCount":3,"data":[{"title":"BFS--1181变形课","uid":"fc4a684f7b377b87f7fe86a8b5c2db69","slug":"BFS-1181变形课","date":"2022-04-14T05:05:14.000Z","updated":"2022-04-14T05:19:32.539Z","comments":true,"path":"api/articles/BFS-1181变形课.json","cover":[],"text":"1181 变形课 题意： 思路：把题目抽象成图，抽象方法如下: 起点：b终点：m路径：对于一个字符串，表示从到存在一条路径。根据如上规则建图bfs即可。 AC代码：#include&lt;bits/stdc++.h&gt; typedef long long ll; const ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BFS--1180诡异的楼梯","uid":"87d1f3817eb5ea98b0e200ea76c187c4","slug":"BFS-1180诡异的楼梯","date":"2022-04-14T05:04:47.000Z","updated":"2022-04-14T05:19:26.749Z","comments":true,"path":"api/articles/BFS-1180诡异的楼梯.json","cover":[],"text":"1180诡异的楼梯 题意： 中文题面，题意也比较直接，直接上原题。 思路：在楼梯不能通过的时候，原地等待一个单位时间就可以了。 注：本题还有一种优先队列的做法，我们可以认为通过一个当前无法通过的楼梯，所花费的时间是2个单位时间(加上等待的时间)，但是这样做会使得队列中每次出队的不...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BFS--1175连连看","uid":"2e4ec95259d8f5d717fa4f2ca765d07a","slug":"BFS-1175连连看","date":"2022-04-14T05:04:31.000Z","updated":"2022-04-14T05:12:03.650Z","comments":true,"path":"api/articles/BFS-1175连连看.json","cover":[],"text":"1175连连看 @[toc]题意： 给出一个的棋盘，玩一个类似于连连看的游戏。 1 2 3 40 0 0 04 3 2 1 ：空格其他：不同的棋子给定棋盘以后，给定起点和终点，要求从起点走到终点，方向转折的次数不能超过2次。 思路： 这题的限制不再是步数，而是转折次数，这就注定了...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BFS--1072 Nightmare","uid":"cf6e09e51125ac3f1f40b26cf31e9a4d","slug":"BFS-1072-Nightmare","date":"2022-04-14T05:04:12.000Z","updated":"2022-04-14T05:19:22.289Z","comments":true,"path":"api/articles/BFS-1072-Nightmare.json","cover":[],"text":"1072 Nightmare 题意： 小明被困在一个迷宫如下中：1.小明每次可以花一个单位时间往上下左右的某个方向移动一格。2.小明身上有一个炸弹，在第6个单位时间就会爆炸，在第6个单位时间走到终点或者刷新炸弹时间是无效的。 举例如下：2 1 1 0 1 1 1 01 0 4 1...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--起床困难综合症","uid":"bd5b7856161209228b064ee3a7d6843f","slug":"0x01位运算-起床困难综合症","date":"2022-04-14T05:00:21.000Z","updated":"2022-04-20T05:40:46.991Z","comments":true,"path":"api/articles/0x01位运算-起床困难综合症.json","cover":[],"text":"0x01位运算——起床困难综合症 思路分析 位运算的特点之一就是二进制下运算不进位。因此在可以任意选择的情况下，参与位运算的各个位(bit)是无关的。 而每一个的初始取值只有0和1两种情况，所以我们只需要枚举每一位，比较初始取值0和1情况下，经过n个防御门后得到的值，在0和1这两...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--最短Hamilton路径","uid":"5e6fa880a2b85943c805a5daeb5a1a2c","slug":"0x01位运算-最短Hamilton路径","date":"2022-04-14T04:59:38.000Z","updated":"2022-04-20T05:40:44.548Z","comments":true,"path":"api/articles/0x01位运算-最短Hamilton路径.json","cover":[],"text":"0x01位运算——最短Hamilton路径 说明 本题的正解——状态压缩dp，我们将在0x56节详细介绍 思路分析 我们可以使用一个n维的bool数组记录下某时刻经过了哪些点，未经过哪些点，而这里的n维的bool数组，可以用一个n位的二进制数代替。在这个二进制数中，第i位为1则代...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--64位整数乘法","uid":"97612da9b20c890887f4d716902dc0f2","slug":"0x01位运算-64位整数乘法","date":"2022-04-14T04:58:43.000Z","updated":"2022-04-20T05:40:33.500Z","comments":true,"path":"api/articles/0x01位运算-64位整数乘法.json","cover":[],"text":"0x01 位运算——64位整数乘法 问题简析 C++内置的最高整数类型是64位，所以显然不能通过直接运算得到答案，我们需要一些特殊的处理方法，在这里提供两种方法。 思路一 类似于快速幂的思想，把b拆分成k位二进制。$b=C_{k-1}2^{k-1}+C_{k-2}2^{k-2}…...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--a^b","uid":"2fe208e266b9d06ce4fcbff1033f1615","slug":"0x01位运算-a-b","date":"2022-04-14T04:57:50.000Z","updated":"2022-04-20T05:40:42.276Z","comments":true,"path":"api/articles/0x01位运算-a-b.json","cover":[],"text":"0x01位运算——a^b 题目： 思路分析 如果b在二进制下有k位,每一位为可以将b分解为： $b=C_{k-1}2^{k-1}+C_{k-2}2^{k-2}+…+C_{0}*2^{0}$ 因为所以很容易用递推求出每一个乘积项 时间复杂度分析 ，所以这样的项不会超过个时间复杂度：...","link":"","photos":[],"count_time":{"symbolsCount":709,"symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01——位运算","uid":"e27ecc703f2c8f1506aebea43aaa01a7","slug":"0x01——位运算","date":"2022-04-13T13:14:40.000Z","updated":"2022-04-20T05:40:22.008Z","comments":true,"path":"api/articles/0x01——位运算.json","cover":null,"text":"基础知识及二进制常见用法 前言 bit是度量信息的单位，包含0和1两种状态。计算机的各种运算最后无不归结位一个个bit的变化。熟练掌握并利用位运算，能够帮助我们理解程序运行中的种种表现，提高程序循行的时空效率，降低编程复杂度。 运算符优先级 从左到右优先级依次降低| 加减 |移位...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"最小二乘法","uid":"f65394965aa072446681bba60362a87b","slug":"最小二乘法","date":"2022-04-13T13:12:41.000Z","updated":"2022-04-19T13:49:07.954Z","comments":true,"path":"api/articles/最小二乘法.json","cover":[],"text":"最小二乘法从高数分数预测开始 给一组数据如下：|认真听课的时间|最后的考试分数||-|-||20|40||25|60||30|75||35|80||40|85||45|100|我们假设认真听课的时间为，最后的考试分数为。并且假设两者间的关系为一个线性函数：那么我们要怎么通过上面的...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"人工智能","slug":"人工智能","count":2,"path":"api/categories/人工智能.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":1,"path":"api/tags/机器学习.json"}],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Codeforces Round 781 (Div. 2)","uid":"0e8f626ea0dbc25b970b50c6d6ca6667","slug":"Codeforces-Round-781-Div-2","date":"2022-04-12T10:34:34.000Z","updated":"2022-04-18T00:28:39.600Z","comments":true,"path":"api/articles/Codeforces-Round-781-Div-2.json","cover":[],"text":" A. GCD vs LCM题意： 给定数n，找到a,b,c,d四个数满足下列条件： 1.2. 思路： 取特殊情况，令即可。即构造 时间复杂度： 所需时间与输入规模无关: AC代码： #include&lt;bits/stdc++.h&gt; const int N = 2e2+...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"题解","slug":"题解","count":8,"path":"api/categories/题解.json"}],"tags":[{"name":"Codeforces","slug":"Codeforces","count":4,"path":"api/tags/Codeforces.json"}],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Codeforces Round 780 (Div. 3)","uid":"a755efac510fc930070b9bd1314d7bb8","slug":"Codeforces-Round-780-Div-3","date":"2022-04-12T10:34:26.000Z","updated":"2022-04-18T00:28:52.259Z","comments":true,"path":"api/articles/Codeforces-Round-780-Div-3.json","cover":[],"text":" A. Vasya and Coins题意： 小明有枚1元硬币和枚2元硬币，输出小明无法支付的最小金额。 思路： 没有1元硬币： 答案为1 有1元硬币： 答案为 时间复杂度： AC代码： 在这里插入代码片#include&lt;bits/stdc++.h&gt; typedef ...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"题解","slug":"题解","count":8,"path":"api/categories/题解.json"}],"tags":[{"name":"Codeforces","slug":"Codeforces","count":4,"path":"api/tags/Codeforces.json"}],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}