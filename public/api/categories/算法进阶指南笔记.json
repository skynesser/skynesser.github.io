{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"postlist":[{"title":"0x01——位运算","uid":"e27ecc703f2c8f1506aebea43aaa01a7","slug":"0x01——位运算","date":"2022-04-13T13:14:40.000Z","updated":"2022-04-20T05:40:22.008Z","comments":true,"path":"api/articles/0x01——位运算.json","keywords":null,"cover":null,"text":"基础知识及二进制常见用法 前言 bit是度量信息的单位，包含0和1两种状态。计算机的各种运算最后无不归结位一个个bit的变化。熟练掌握并利用位运算，能够帮助我们理解程序运行中的种种表现，提高程序循行的时空效率，降低编程复杂度。 运算符优先级 从左到右优先级依次降低| 加减 |移位...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--起床困难综合症","uid":"bd5b7856161209228b064ee3a7d6843f","slug":"0x01位运算-起床困难综合症","date":"2022-04-14T05:00:21.000Z","updated":"2022-04-20T05:40:46.991Z","comments":true,"path":"api/articles/0x01位运算-起床困难综合症.json","keywords":null,"cover":[],"text":"0x01位运算——起床困难综合症 思路分析 位运算的特点之一就是二进制下运算不进位。因此在可以任意选择的情况下，参与位运算的各个位(bit)是无关的。 而每一个的初始取值只有0和1两种情况，所以我们只需要枚举每一位，比较初始取值0和1情况下，经过n个防御门后得到的值，在0和1这两...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--a^b","uid":"2fe208e266b9d06ce4fcbff1033f1615","slug":"0x01位运算-a-b","date":"2022-04-14T04:57:50.000Z","updated":"2022-04-20T05:40:42.276Z","comments":true,"path":"api/articles/0x01位运算-a-b.json","keywords":null,"cover":[],"text":"0x01位运算——a^b 题目： 思路分析 如果b在二进制下有k位,每一位为可以将b分解为： $b=C_{k-1}2^{k-1}+C_{k-2}2^{k-2}+…+C_{0}*2^{0}$ 因为所以很容易用递推求出每一个乘积项 时间复杂度分析 ，所以这样的项不会超过个时间复杂度：...","link":"","photos":[],"count_time":{"symbolsCount":709,"symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--64位整数乘法","uid":"97612da9b20c890887f4d716902dc0f2","slug":"0x01位运算-64位整数乘法","date":"2022-04-14T04:58:43.000Z","updated":"2022-04-20T05:40:33.500Z","comments":true,"path":"api/articles/0x01位运算-64位整数乘法.json","keywords":null,"cover":[],"text":"0x01 位运算——64位整数乘法 问题简析 C++内置的最高整数类型是64位，所以显然不能通过直接运算得到答案，我们需要一些特殊的处理方法，在这里提供两种方法。 思路一 类似于快速幂的思想，把b拆分成k位二进制。$b=C_{k-1}2^{k-1}+C_{k-2}2^{k-2}…...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"0x01位运算--最短Hamilton路径","uid":"5e6fa880a2b85943c805a5daeb5a1a2c","slug":"0x01位运算-最短Hamilton路径","date":"2022-04-14T04:59:38.000Z","updated":"2022-04-20T05:40:44.548Z","comments":true,"path":"api/articles/0x01位运算-最短Hamilton路径.json","keywords":null,"cover":[],"text":"0x01位运算——最短Hamilton路径 说明 本题的正解——状态压缩dp，我们将在0x56节详细介绍 思路分析 我们可以使用一个n维的bool数组记录下某时刻经过了哪些点，未经过哪些点，而这里的n维的bool数组，可以用一个n位的二进制数代替。在这个二进制数中，第i位为1则代...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶指南笔记","slug":"算法进阶指南笔记","count":5,"path":"api/categories/算法进阶指南笔记.json"}],"tags":[],"author":{"name":"skynesser","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}